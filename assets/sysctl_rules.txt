# Disable the TCP timestamps option for better CPU utilization
sysctl -w net.ipv4.tcp_timestamps=0
# Enable the TCP selective acks option for better throughput
sysctl -w net.ipv4.tcp_sack=1
# Increase the maximum length of processor input queues:
sysctl -w net.core.netdev_max_backlog=250000
# Increase number of incoming connections (ISCSI uses 256 and this has to be minimum 256)
sysctl -w net.core.somaxconn=1024
# Increase the TCP maximum and default buffer sizes using setsockopt():
sysctl -w net.core.rmem_max=16777216
sysctl -w net.core.wmem_max=16777216
sysctl -w net.core.rmem_default=8388608
sysctl -w net.core.wmem_default=8388608
sysctl -w net.core.optmem_max=8388608
# Increase memory thresholds to prevent packet dropping:
sysctl -w net.ipv4.tcp_rmem="4096 87380 16777216"
sysctl -w net.ipv4.tcp_wmem="4096 65536 16777216"
# Enable low latency mode for TCP:
sysctl -w net.ipv4.tcp_low_latency=1
sysctl -w net.ipv4.tcp_fin_timeout=15
# The following variable is used to tell the kernel how much of the
# socket buffer space should be used for TCP window size, and how much
# to save for an application buffer.
# A value of 1 means the socket buffer will be divided evenly between
# TCP windows size and application
sysctl -w net.ipv4.tcp_syncookies=1
sysctl -w net.ipv4.tcp_adv_win_scale=1
sysctl -w net.ipv4.tcp_window_scaling=1
# Increase the maximum sync backlog.
sysctl -w net.ipv4.tcp_max_syn_backlog=8192
# This allows reusing sockets in TIME_WAIT state for new
# connections when it is safe from protocol viewpoint.
sysctl -w net.ipv4.tcp_tw_reuse=1
# Number of times SYNACKs for passive TCP connection.
sysctl -w net.ipv4.tcp_synack_retries=2
